security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        registration:
            pattern:  ^/api/users
            stateless: true
            anonymous: true
            methods: [POST]
        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern:   ^/api
            stateless: true
            anonymous: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            anonymous: lazy
            provider: app_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY  }
        - { path: ^/api/authentication_token, roles: IS_AUTHENTICATED_ANONYMOUSLY  }
        - { path: ^/api/users, roles: IS_AUTHENTICATED_FULLY, method: [GET, PUT, DELETE]  }
        - { path: ^/api/members, roles: IS_AUTHENTICATED_FULLY}
        - { path: ^/api/announces, roles: IS_AUTHENTICATED_FULLY}
        - { path: ^/api/association_profiles, roles: IS_AUTHENTICATED_FULLY}
        - { path: ^/api/associations, roles: IS_AUTHENTICATED_FULLY}
        - { path: ^/api/categories, roles: IS_AUTHENTICATED_FULLY}
        - { path: ^/api/donations, roles: IS_AUTHENTICATED_FULLY}
        - { path: ^/api/events, roles: IS_AUTHENTICATED_FULLY}
        - { path: ^/api/networks_social_links, roles: IS_AUTHENTICATED_FULLY}
        - { path: ^/api/product_websites, roles: IS_AUTHENTICATED_FULLY}
        - { path: ^/api/project_plannings, roles: IS_AUTHENTICATED_FULLY}
        - { path: ^/api/tasks, roles: IS_AUTHENTICATED_FULLY}
        - { path: ^/api/projects, roles: IS_AUTHENTICATED_FULLY}
        - { path: ^/api/transactions, roles: IS_AUTHENTICATED_FULLY}
        - { path: ^/api/tutorials, roles: IS_AUTHENTICATED_FULLY}
        - { path: ^/api/plannings, roles: IS_AUTHENTICATED_FULLY  }
        # - { path: ^/profile, roles: ROLE_USER }
